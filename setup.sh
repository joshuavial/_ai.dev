#!/bin/bash

# Setup script for _ai.bws directory
# This script:
# 1. Creates a symlink from parent/wt to _ai.bws/wt
# 2. Creates a .wt.conf file in the parent directory
# 3. Updates .gitignore to exclude _ai.bws, wt, and .wt.conf

set -e  # Exit on error

# Get the script directory and parent directory
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PARENT_DIR="$(dirname "$SCRIPT_DIR")"

echo "Setting up _ai.bws configuration..."

# Track if any changes were made
CHANGES_MADE=false

# 1. Create symlink from parent/wt to _ai.bws/wt
echo "Checking symlink from parent/wt to _ai.bws/wt..."
EXPECTED_TARGET="_ai.bws/wt"
if [ -L "$PARENT_DIR/wt" ]; then
    # Check if existing symlink points to the correct location
    CURRENT_TARGET=$(readlink "$PARENT_DIR/wt")
    if [ "$CURRENT_TARGET" = "$EXPECTED_TARGET" ]; then
        echo "✓ Symlink already exists and points to the correct location"
    else
        echo "× Symlink exists but points to: $CURRENT_TARGET"
        echo "  Expected: $EXPECTED_TARGET"
        echo "  Removing and recreating with relative path..."
        rm "$PARENT_DIR/wt"
        cd "$PARENT_DIR" && ln -s "$EXPECTED_TARGET" "wt"
        echo "✓ Symlink recreated with relative path"
        CHANGES_MADE=true
    fi
elif [ -e "$PARENT_DIR/wt" ]; then
    echo "× Error: wt exists in parent directory but is not a symlink"
    exit 1
else
    echo "Creating relative symlink from $PARENT_DIR/wt to _ai.bws/wt"
    cd "$PARENT_DIR" && ln -s "$EXPECTED_TARGET" "wt"
    echo "✓ Symlink created with relative path"
    CHANGES_MADE=true
fi

# 2. Create .wt.conf file in parent directory
echo -e "\nChecking .wt.conf file..."
if [ -f "$PARENT_DIR/.wt.conf" ]; then
    echo "✓ .wt.conf already exists in parent directory"
else
    echo "Creating .wt.conf file in parent directory..."
    cat > "$PARENT_DIR/.wt.conf" << 'EOF'
# Work tracker configuration
# Auto-generated by _ai.bws/setup.sh
EOF
    echo "✓ .wt.conf created"
    CHANGES_MADE=true
fi

# 3. Update .gitignore
GITIGNORE="$PARENT_DIR/.gitignore"

# Function to add entry to .gitignore if not already present
add_to_gitignore() {
    local entry="$1"
    if [ -f "$GITIGNORE" ]; then
        if ! grep -q "^${entry}$" "$GITIGNORE"; then
            echo "$entry" >> "$GITIGNORE"
            echo "  ✓ Added $entry to .gitignore"
            CHANGES_MADE=true
        else
            echo "  ✓ $entry already in .gitignore"
        fi
    else
        echo "$entry" > "$GITIGNORE"
        echo "  ✓ Created .gitignore and added $entry"
        CHANGES_MADE=true
    fi
}

echo -e "\nChecking .gitignore entries..."
add_to_gitignore "_ai.bws"
add_to_gitignore "wt"
add_to_gitignore ".wt.conf"

# Final status
echo -e "\n========================================="
if [ "$CHANGES_MADE" = true ]; then
    echo "Setup complete! Changes were made."
else
    echo "Setup complete! Everything was already configured correctly."
fi
echo "========================================="